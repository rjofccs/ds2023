sudo tshark -i br-818275ff5b0a -f "tcp and port 23" -o tcp.relative_sequence_numbers:FALSE -w /tmp.pcap -T fields -e frame.number -e tcp.seq -e ip.src -e tcp.srcport -e ip.dst -e tcp.dstport -e tcp.ack -e frame.time_epoch

tee /home/seed/Lab2/volumes/reset.py <<-'EOF'
#!/usr/bin/env python3
EOF
netstat -tna | grep SYN_RECV | wc -l

apt update && apt -y install zip python3-pip nodejs npm openjdk-17-jdk docker-compose
ln -sf /usr/bin/python3.10 /usr/bin/python

docker run -p 1111:80 -v /usr/local/dav/web/:/usr/share/nginx/html -d nginx:alpine
docker run -d -v /usr/local/dav:/data -p 3333:5000 sigoden/dufs /data --auth 1:1@/:rw -A
git clone https://github.com/rjofccs/webssh.git&&cd webssh&&docker-compose up -d
npm install pm2 -g&&mkdir /usr/local/pm2/
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash

unzip -d -r nf


type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
&& sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
&& echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
&& sudo apt update \
&& sudo apt install gh -y
git checkout --orphan lastest_branch&&git add -A&&git commit -am 'c'&&git branch -D main&&git branch -m main&&git push -f origin main
gh repo clone rjofccs/ms2023





inaninstant

notatall

takeiteasy




justdoit

whois

toooften

Iam

sheasked

r




https://huggingface.co/spaces/sanchit-gandhi/whisper-jax

https://vscode.dev/

https://gist.github.com/Bonno/73873ed4ac523adc9611

https://coder.com/docs/code-server/latest/FAQ

https://levelup.gitconnected.com/fix-error-unable-to-extract-uploader-id-3fad389322a7

https://ssheasy.com/

https://stackoverflow.com/questions/57869367/ffmpeg-subtitles-alignment-and-position/57886939#57886939

https://superuser.com/questions/363511/execute-script-program-when-file-changes

https://tex.stackexchange.com/questions/161352/pdflatex-how-to-automatically-quit-on-compile-error

https://tex.stackexchange.com/questions/61429/how-to-draw-a-hexagonal-grid-with-numbers-in-the-cells

https://www.smarthomebeginner.com/best-docker-containers-for-home-server/




python3 -m pip install --force-reinstall https://github.com/yt-dlp/yt-dlp/archive/master.tar.gz

yt-dlp --format "bv*[ext=mp4][height<=720]+ba[ext=m4a]/b[ext=mp4][height<=720]" --write-auto-sub -o "./%(id)s.%(ext)s" u

ffmpeg -i  xx -lavfi "subtitles= .en.vtt:force_style='Alignment=0,OutlineColour=&H100000000,BorderStyle=3,Outline=1,Shadow=0,Fontsize=18,MarginL=5,MarginV=25'" xx

ffmpeg -ss {} -to {} -y -i xx -c copy xx
ffmpeg -itsoffset -1.0 -y -i xx -i xx -map 0:v -map 1:a -vcodec copy -acodec copy yy





p6R+yoajfvfrZa-*

docker run -d -p 8081:8081 -v /path/to/downloads:/downloads ghcr.io/alexta69/metube

https://drive.google.com/file/d/1A1IGuzwAtqnw95Y69VUC6CqK_GpIs-01/view
https://drive.google.com/file/d/1e4MIqcsDaMyreMu9-F6RnDc63cNbNs4A/view?pli=1
https://blog.csdn.net/qq_39852676/article/details/131352226
https://github.com/Snailclimb/JavaGuide
https://coder.com/docs/code-server/latest/install#debian-ubuntu
https://coder.com/docs/code-server/latest/install#debian-ubuntu
https://github.com/briansjavablog/build-and-run-spring-boot-with-docker
ttps://www.bilibili.com/video/BV1KY411x7Jp/
curl -o src-cloud.zip https://seed.nyc3.cdn.digitaloceanspaces.com/src-cloud.zip&&sudo apt update&&sudo apt -y install unzip&&unzip src-cloud.zip&&cd src-cloud&&./install.sh
wget https://seedsecuritylabs.org/Labs_20.04/Files/TCP_Attacks/Labsetup.zip&&unzip Labsetup.zip&&cd Labsetup
sudo add-apt-repository -y ppa:wireshark-dev/stable
sudo apt install -y tshark
sudo tshark -i br-818275ff5b0a -f "tcp and port 23" -o tcp.relative_sequence_numbers:FALSE -w /tmp.pcap -T fields -e frame.number -e tcp.seq -e ip.src -e tcp.srcport -e ip.dst -e tcp.dstport -e tcp.ack -e frame.time_epoch
https://chrome.google.com/webstore/detail/awesome-chatgpt-screensho/nlipoenfbbikpbjkfpfillcgkoblgpmj?utm_source=app-launcher
https://chrome.google.com/webstore/detail/immersive-translate/bpoadfkcbjbfhfodiogcnhhhpibjhbnh?utm_source=app-launcher
https://coder.com/docs/code-server/latest/install#debian-ubuntu
https://www.papeeria.com/p/0940d65a-981c-4726-aca2-bedabaf49ee4#/main.tex
https://raw.githubusercontent.com/rjofccs/ds2023/main/test3.png

curl -X POST http://144.202.85.251:8080/login -H "Content-Type: application/x-www-form-urlencoded" -d "username=admin&password="






VERSION=4.14.1
USER=root
curl -fOL https://github.com/coder/code-server/releases/download/v$VERSION/code-server_${VERSION}_amd64.deb
sudo dpkg -i code-server_${VERSION}_amd64.deb
sudo systemctl enable --now code-server@$USER
# ufw disable Now visit http://0.0.0.0:5555. Your password is in
tee -i '1c bind-addr: 0.0.0.0:5555' ~/.config/code-server/config.yaml
tee -i '3c password: 5b568f7ccabd5e122a0a1911' ~/.config/code-server/config.yaml
apt install -y openjdk-17-jdk -y&&java --version

docker run -d \
  --name myubuntu \
  -e USER=root \
  -e PASSWORD=123456 \
  -e VNC_PASSWORD=123456 \
  -v /dev/shm:/dev/shm \
  -p 9999:80 \
  -p 5900:5900 \
  -e RESOLUTION=1360x768 \
  dorowu/ubuntu-desktop-lxde-vnc

FROM maven:3.5.2-jdk-8-alpine AS MAVEN_BUILD
MAINTAINER Brian Hannaway
COPY pom.xml /build/
COPY src /build/src/
WORKDIR /build/
RUN mvn package
FROM openjdk:8-jre-alpine
WORKDIR /app
COPY --from=MAVEN_BUILD /build/target/docker-boot-intro-0.1.0.jar /app/
ENTRYPOINT ["java", "-jar", "docker-boot-intro-0.1.0.jar"]

apt install -y libgtk3-dev
import gi
gi.require_version('Gtk', '3.0')
from gi.repository import Gtk, Gdk
window = Gdk.get_default_root_window()
x, y, width, height = window.get_geometry()
print("The size of the root window is {} x {}".format(width, height))
pb = Gdk.pixbuf_get_from_window(window, x, y, width, height)
if pb:
    pb.savev("screenshot.png", "png", (), ())
    print("Screenshot saved to screenshot.png.")
else:
    print("Unable to get the screenshot.")



ClientHello记录：
3. 展开ClientHello记录。(如果你的追踪包含多个ClientHello记录，展开包含第一个记录的框架)。内容类型的值是什么？
4. ClientHello记录是否包含一个nonce（也称为 "挑战"）？如果是，挑战的值是什么，用十六进制表示？
5. ClientHello记录是否公布了它所支持的网络套件？如果是，在第一个列出的套件中，公钥算法、对称密钥算法和哈希算法是什么？
ServerHello记录：
6. 找到ServerHello SSL记录。该记录是否指定了所选择的密码套件？所选择的密码套件中的算法是什么？
7. 这条记录是否包括一个nonce？如果是的话，它有多长？在SSL中，客户端和服务器端的nonce的目的是什么？
8. 这条记录是否包括一个会话ID？会话ID的目的是什么？
9. 这条记录是否包含一个证书，或者证书是否包含在一个单独的记录中。该证书是否 证书是否包含在一个以太网帧中？

客户端密钥交换记录：
10. 找到客户端密钥交换记录。该记录是否包含预主密码？这个秘密是什么 秘密用来做什么？该秘密是否被加密？如果是的话，是怎样的？加密后的秘密有多长？
更改密码规格记录（由客户发送）和加密握手记录：
11. 更改密码规格记录的目的是什么？在你的跟踪中，该记录有多少字节？
12. 在加密握手记录中，什么是被加密的？如何加密？
13. 服务器是否也向客户发送了一个变化的密码记录和一个加密的握手记录？这些记录与客户端发送的记录有什么不同？

应用数据
14. 应用数据是如何被加密的？包含应用数据的记录是否包括MAC？Wireshark是否区分了加密的应用数据和MAC?
